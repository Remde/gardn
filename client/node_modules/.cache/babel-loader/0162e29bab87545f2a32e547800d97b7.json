{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoremde/Coding/gardn/client/src/Components/chat.js\";\nimport React from \"react\";\nimport Navbar from \"../Components/navbar\";\nimport MessageList from \"../Components/messagelist\";\nimport TextInput from \"../Components/textinput\";\nimport socketIOClient from \"socket.io-client\";\nconst socket = socketIOClient(\"localhost:5000/\");\n\nclass Chat extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messageList: [],\n      socket: null,\n      messageKey: 0\n    };\n\n    this.getTime = () => {\n      var myDate = new Date().toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\n      console.log(typeof myDate);\n      return myDate.slice(0);\n    };\n\n    this.componentDidMount = () => {\n      this.messageReceive();\n    };\n\n    this.messageReceive = () => {\n      socket.on(\"chat message\", message => {\n        this.addMessage(message);\n      });\n    };\n\n    this.messageSend = message => {\n      let newMessageKey;\n      message = {\n        message: message,\n        author: this.props.username,\n        date: this.getTime(),\n        id: socket.id,\n        key: this.state.messageKey\n      };\n      newMessageKey = 1 + this.state.messageKey;\n      this.setState({\n        messageKey: newMessageKey\n      });\n      this.addMessage(message);\n      socket.emit(\"chat message\", message);\n    };\n\n    this.onButtonClick = event => {\n      this.props.unauthenticator();\n    };\n\n    this.addMessage = message => {\n      let newEntry = message;\n      let newState = this.state.messageList;\n      newState.push(newEntry);\n      this.setState(state => ({\n        messageList: newState\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      unauthenticator: this.props.unauthenticator,\n      username: this.props.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MessageList, {\n      messageList: this.state.messageList,\n      id: socket.id,\n      key: this.state.messageKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      messageSend: this.messageSend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/fernandoremde/Coding/gardn/client/src/Components/chat.js"],"names":["React","Navbar","MessageList","TextInput","socketIOClient","socket","Chat","Component","state","messageList","messageKey","getTime","myDate","Date","toTimeString","replace","console","log","slice","componentDidMount","messageReceive","on","message","addMessage","messageSend","newMessageKey","author","props","username","date","id","key","setState","emit","onButtonClick","event","unauthenticator","newEntry","newState","push","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Navbar from \"../Components/navbar\";\nimport MessageList from \"../Components/messagelist\";\nimport TextInput from \"../Components/textinput\";\nimport socketIOClient from \"socket.io-client\";\n\nconst socket = socketIOClient(\"localhost:5000/\");\n\nclass Chat extends React.Component {\n  state = { messageList: [], socket: null, messageKey: 0 };\n\n  getTime = () => {\n    var myDate = new Date()\n      .toTimeString()\n      .replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\n    console.log(typeof myDate);\n    return myDate.slice((0: 4));\n  };\n\n  componentDidMount = () => {\n    this.messageReceive();\n  };\n\n  messageReceive = () => {\n    socket.on(\"chat message\", (message) => {\n      this.addMessage(message);\n    });\n  };\n\n  messageSend = (message) => {\n    let newMessageKey;\n    message = {\n      message: message,\n      author: this.props.username,\n      date: this.getTime(),\n      id: socket.id,\n      key: this.state.messageKey,\n    };\n    newMessageKey = 1 + this.state.messageKey;\n    this.setState({ messageKey: newMessageKey });\n    this.addMessage(message);\n    socket.emit(\"chat message\", message);\n  };\n\n  onButtonClick = (event) => {\n    this.props.unauthenticator();\n  };\n\n  addMessage = (message) => {\n    let newEntry = message;\n    let newState = this.state.messageList;\n    newState.push(newEntry);\n    this.setState((state) => ({\n      messageList: newState,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <Navbar\n          unauthenticator={this.props.unauthenticator}\n          username={this.props.username}\n        />\n        <MessageList\n          messageList={this.state.messageList}\n          id={socket.id}\n          key={this.state.messageKey}\n        />\n        <TextInput messageSend={this.messageSend} />\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}